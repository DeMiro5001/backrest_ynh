#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "backrest"
name = "Backrest"
description.en = "web UI and orchestrator for restic backup"
description.fr = "interface Web et orchestrateur pour la sauvegarde restic"

version = "1.5.1~ynh1"

maintainers = ["DeMiro5001"]

[upstream]
# NB: Only the "license" key is mandatory. Remove entries for which there's no relevant data
license = "GPL-3.0-only" # you can see the available licenses identifiers list here: https://spdx.org/licenses/
admindoc = "https://github.com/garethgeorge/backrest#installation"
userdoc = "https://garethgeorge.github.io/backrest/introduction/getting-started"
code = "https://github.com/garethgeorge/backrest"
fund = "https://buymeacoffee.com/garethgeorge"

[integration]
yunohost = ">= 11.2.30"
helpers_version = "2.1"
# FIXME: can be replaced by a list of supported archs using the dpkg --print-architecture nomenclature (amd64/i386/armhf/arm64), for example: ["amd64", "i386"]
architectures = "all"
multi_instance = false

# FIXME: replace with true, false, or "not_relevant".
# Not to confuse with the "sso" key: the "ldap" key corresponds to wether or not a user *can* login on the app using
# its YunoHost credentials.
ldap = false

# FIXME: replace with true, false, or "not_relevant".
# Not to confuse with the "ldap" key: the "sso" key corresponds to wether or not a user is *automatically logged-in*
# on the app when logged-in on the YunoHost portal.
sso = false

# FIXME: replace with an **estimate** minimum disk and RAM requirements. e.g. 20M, 400M, 1G...
disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"

    [install.path]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "path"
    default = "/backrest"

    [install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    type = "group"
    default = "admins"

    #[install.language]
    #ask.en = "Choose the application language"
    #ask.fr = "Choisissez la langue de l'application"
    #type = "select"
    #choices = ["fr", "en"]
    #default = "fr"

    #[install.admin]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    #type = "user"

    #[install.password]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # Note that user-provided passwords questions are not automatically saved as setting
    #help.en = "Use the help field to add an information for the admin about this question."
    #help.fr = "Utilisez le champ aide pour ajouter une information à l'intention de l'administrateur à propos de cette question."
    #type = "password"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those

    [resources.sources]

    [resources.sources.main]
    # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
    #    ynh_setup_source --dest_dir="$install_dir"
    # You can also define other assets than "main" and add --source_id="foobar" in the previous command
    amd64.url = "https://github.com/garethgeorge/backrest/releases/download/v1.5.1/backrest_Linux_x86_64.tar.gz"
    amd64.sha256 = "6112ab5a8b213be3c8cb30a803ef989547f68dd962e3b709f5f2f27325f8a4ed"
    arm64.url = "https://github.com/garethgeorge/backrest/releases/download/v1.5.1/backrest_Linux_arm64.tar.gz"
    arm64.sha256 = "4022015aa9e5c66ff1a04fb9342b3e312b190e4d07bbb444abd792a9d9976082"
    in_subdir = false

    # These infos are used by https://github.com/YunoHost/apps/blob/master/tools/autoupdate_app_sources/autoupdate_app_sources.py
    # to auto-update the previous asset urls and sha256sum + manifest version
    # assuming the upstream's code repo is on github and relies on tags or releases
    # See the 'sources' resource documentation for more details

    autoupdate.strategy = "latest_github_tag"
    autoupdate.asset.amd64 = ".*_linux_amd64.tar.gz"
    autoupdate.asset.arm64 = ".*_linux_arm64.tar.gz"


    # [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    #[resources.data_dir]
    # This will create/remove the data dir as /home/yunohost.app/$app
    # and store the corresponding setting $data_dir

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"

    [resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting

    #[resources.apt]
    # This will automatically install/uninstall the following apt packages
    # and implicitly define the $phpversion setting as 8.0 (if phpX.Y-foobar dependencies are listed)
    #packages = "mariadb-server, deb1, deb2, php8.0-foo, php8.0-bar"

    #[resources.database]
    # This will automatically provision/deprovison a MySQL DB and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
    #type = "mysql"
